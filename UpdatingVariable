public class UpdatingVariable {
    public static void main(String[] args) {
        // Actualizar datos numéricos:
        int salary = 1000; //Nuestra variable
        salary = salary + 200;  //Le sumamos 200
        System.out.println(salary); // 1200 , al mostrar nuevamente nuestra variable pero ahora se a actualizado

        salary += 300; //ahora usamos += para asignar una suma a nuestra variable de 300
        System.out.println(salary); // 1500

        // Actualizar variables de tipo String o cadena de texto:
        String employeeName = "Benito ";
        employeeName = employeeName + "Bodoque ";
        System.out.println(employeeName); // Nos regresa "Benito bodoque" ya que se a agregado a la cadena "bodoque"

        employeeName += "Díaz de la Vega"; //una ves mas agregamos contenido usando += pero esta vez a una cadena string
        System.out.println(employeeName); // Benito Bodoque Díaz de la Vega

        employeeName = "Don " + employeeName;
        System.out.println(employeeName); // completamos la informacion agregando al inicio otro arreglo

/*
agregado 26 de marzo! las variables largas generan problemas cuando son mas de 10 digitos 
caso similar para el punto decimal y numeros negativos 
para eso terminamos el valor numerico con L valores largos y F para numeros decimales 
*/
        long numero = 102345678L;
        long n = 10123456789L; //nota L al final es para numeros largos
        System.out.println("numero = " + numero);
        System.out.println("numero largo" + n); //mostramos el dato largo

        double decimal = 1.123456789011;
        float decimal2 = 1.9876543219F ; //igual mente con decimales podemos usar double simple o float con una F al final
        double decimalLargo = 1234567890.123456789;

        /*
        *El tipo de dato double es una precisión de punto flotante de doble precisión,
        * que puede manejar números decimales más largos
        * y con mayor precisión que el tipo de dato float.
        */




    }
}